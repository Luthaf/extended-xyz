cmake_minimum_required(VERSION 3.10)

project(exyz C)

option(EXYZ_SANITIZERS OFF "Use sanitizers (address, undefined) for the build")
option(EXYZ_BUILD_TESTS ON "Build unit tests")

macro(add_sanitizer _lang_ _flag_)
    if (${_lang_} STREQUAL C)
        include(CheckCCompilerFlag)
        if (CMAKE_C_COMPILER_ID MATCHES "Clang" OR CMAKE_C_COMPILER_ID STREQUAL "GNU" OR CMAKE_C_COMPILER_ID STREQUAL "AppleClang")
            set(CMAKE_REQUIRED_LINK_OPTIONS "-fsanitize=${_flag_}")
            check_c_compiler_flag("-Werror -fsanitize=${_flag_}" C_SUPPORTS_SANITIZE_${_flag_})
            if (C_SUPPORTS_SANITIZE_${_flag_})
                set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fsanitize=${_flag_} -fno-omit-frame-pointer")
                set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fsanitize=${_flag_}")
            endif()
        endif()
    endif()

    if (${_lang_} STREQUAL CXX)
        include(CheckCXXCompilerFlag)
        if (CMAKE_CXX_COMPILER_ID MATCHES "Clang" OR CMAKE_CXX_COMPILER_ID STREQUAL "GNU" OR CMAKE_CXX_COMPILER_ID STREQUAL "AppleClang")
            set(CMAKE_REQUIRED_LINK_OPTIONS "-fsanitize=${_flag_}")
            check_cxx_compiler_flag("-Werror -fsanitize=${_flag_}" CXX_SUPPORTS_SANITIZE_${_flag_})
            if (CXX_SUPPORTS_SANITIZE_${_flag_})
                set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=${_flag_} -fno-omit-frame-pointer")
                set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fsanitize=${_flag_}")
            endif()
        endif()
    endif()
endmacro()

if(${EXYZ_SANITIZERS})
    add_sanitizer(C "address")
    add_sanitizer(C "memory")
    add_sanitizer(C "undefined")
    add_sanitizer(C "leak")
endif()

set(CMAKE_C_FLAGS "-pedantic -Weverything -Wno-format-nonliteral -Wno-padded -Wno-unused-parameter")

add_library(exyz src/types.c src/parser.c src/writer.c)
target_include_directories(exyz PUBLIC src)

if (${EXYZ_BUILD_TESTS})
    enable_testing()
    add_subdirectory(tests)
endif()
